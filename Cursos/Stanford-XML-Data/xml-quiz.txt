Multiple Choice
6/6 points (graded)
[Q1] We're interested in well-formed XML that satisfies the following conditions:

It has a root element "tasklist"
The root element has 3 "task" subelements
Each of the "task" subelements has an attribute named "name"
The values of the "name" attributes for the 3 tasks are "eat", "drink", and "play"
Select, from the choices below, the well-formed XML that meets the above requirements.


<tasklist>
  <task name="eat"/>
</tasklist>
<tasklist>
  <task name="drink"/>
</tasklist>
<tasklist>
  <task name="play"/>
</tasklist>
 
<tasklist>
  <task name="eat"/>
  <task name="drink"/>
  <task name="play"/>
</tasklist>
correct

<tasklist>
  <task name="eat">
  <task name="drink">
  <task name="play">
</tasklist>
 
<tasklist>
  <task name="eat"/>
  <task name="drink"/>
  <task name="play"/>
<tasklist>

[Q2] An XML document contains the following portion:


     <INFO>
         <ADDR>101 Maple St.</ADDR>
         <PHONE>555-1212</PHONE>
         <PHONE>555-4567</PHONE>
     </INFO>
Which of the following could be the INFO element specification in a DTD that the document matches?


<!ELEMENT INFO (ADDR*,PHONE+,MANAGER)>
<!ELEMENT INFO (NAME,ADDR,PHONE*)>
<!ELEMENT INFO (ADDR?,PHONE+)> correct
<!ELEMENT INFO (ADDR?,PHONE?)>

[Q3] An XML document contains the following portion:


<EMP name = "Kermit">
    <ADDR>123 Sesame St.</ADDR>
    <PHONE type = "cell">555-1212</PHONE>
</EMP>
Which of the following could NOT be part of a DTD that the document matches? Note that there can be multiple ATTLIST declarations for a single element type; do not assume the only attributes allowed for an element type are the ones shown in the answer choice.


<!ATTLIST EMP name ID #IMPLIED>
<!ATTLIST EMP ssNo ID #IMPLIED>
<!ATTLIST PHONE owner IDREF #REQUIRED> correct
<!ATTLIST EMP ssNo CDATA #IMPLIED>
Correct
Answer-Selection Feedback

This is a correct choice, because a #REQUIRED attribute must appear with every element. In the example fragment of a document, we do not see the owner attribute in the PHONE element.

[Q4] Here is a DTD:


<!DOCTYPE A [
    <!ELEMENT A (B+, C)>
    <!ELEMENT B (#PCDATA)>
    <!ELEMENT C (B?, D)>
    <!ELEMENT D (#PCDATA)>
]>
Which of the following sequences of opening and closing tags matches this DTD? Note: In actual XML, opening and closing tags would be enclosed in angle brackets, and some elements might have text subelements. This quiz focuses on the element sequencing and interleaving specified by the DTD.


A B /B B /B C B /B D /D D /D /C /A
A B /B C D /D /C B /B /A
A B /B B /B C B /B D /D /C /A correct
A B /B B /B C D /D B /B /C /A

[Q5] Here is an XML DTD:


<!DOCTYPE meal [
    <!ELEMENT meal (person*,food*,eats*)>
    <!ELEMENT person EMPTY>
    <!ELEMENT food EMPTY>
    <!ELEMENT eats EMPTY>
    <!ATTLIST person name ID #REQUIRED>
    <!ATTLIST food name ID #REQUIRED>
    <!ATTLIST eats diner IDREF #REQUIRED dish IDREF #REQUIRED>
]>
Which of the following documents match the DTD?

<meal>
  <person name="Alice"/>
  <food name="salad"/>
  <eats diner="Alice" dish="salad"/>
  <person name="Bob"/>
  <food name="salad"/>
  <eats diner="Bob" dish="salad"/>
  <person name="Carol"/>
  <food name="sandwich"/>
  <eats diner="Carol" dish="sandwich"/>
</meal>
<meal>
  <person name="Alice"/>
  <person name="Bob"/>
  <person name="Carol"/>
  <person name="Dave"/>
  <food name="salad"/>
  <food name="turkey"/>
  <food name="sandwich"/>
  <eats diner="Alice" dish="turkey"/>
  <eats diner="Bob" dish="salad"/>
  <eats diner="turkey" dish="Dave"/>
</meal>
<meal>
  <person name="Alice"/>
  <person name="Bob"/>
  <food name="salad"/>
  <eats diner="Alice" dish="food"/>
  <eats diner="Bob" dish="food"/>
</meal>

only the first
only the second correct
only the third
none of the three

[Q6] Study the following XML Schema specification:

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="person">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="fname" type="xs:string"/>
        <xs:element name="initial" type="xs:string"
            minOccurs="0"/>
        <xs:element name="lname" type="xs:string"/>
        <xs:element name="address" type="xs:string"
            maxOccurs="2"/>
        <xs:choice>
          <xs:element name="major" type="xs:string"/>
          <xs:element name="minor" type="xs:string"
              minOccurs="2" maxOccurs="2"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
Select, from the choices below, the XML that is valid according to the XML Schema specification above.


  <person>
    <fname>John</fname>
    <lname>Public</lname>
    <address>123 Public Avenue, Seattle, WA 98001</address>
    <major>Computer Science</major>
  </person>
correct

  <person>
    <fname>John</fname>
    <initial>Q.</initial>
    <lname>Public</lname>
    <address>123 Public Avenue</address>
    <address>Seattle</address>
    <address>WA 98001</address>
  </person>
 
  <person>
    <fname>John</fname>
    <initial>Q.</initial>
    <lname>Public</lname>
    <address>123 Public Avenue</address>
    <address>Seattle</address>
    <address>WA 98001</address>
    <major>Computer Science</major>
  </person>
 
  <person>
    <fname>J.</fname>
    <lname>Public</lname>
    <title>Sr.</title>
    <major>Computer Science</major>
    <address>123 Public Avenue</address>
    <address>Seattle</address>
    <address>WA 98001</address>
  </person>
 Submit Some problems have options such as save, reset, hints, or show answer. These options follow the Submit button.

ResetReset Your Answer
Correct (6/6 points)s